<link href='./js/fullcalendar.css' rel='stylesheet' />
<link rel='stylesheet' type='text/css' href='css/box-lid.css?2015-10-20'>
<link rel='stylesheet' type='text/css' href='css/box-lid-nav.css?aaa'>
<link href='./js/fullcalendar.print.css' rel='stylesheet' media='print' />
<link href="bootstrap.min.css" rel="stylesheet">
<link href="colorbox.min.css" rel="stylesheet">
<script src='http://mima.c.fun.ac.jp/1012151/js/lib/moment.min.js'></script>
<script src='http://mima.c.fun.ac.jp/1012151/js/lib/jquery.min.js'></script>
<script src='http://mima.c.fun.ac.jp/1012151/js/fullcalendar.min.js'></script>
<script src="http://mima.c.fun.ac.jp/1012151/js/underscore-min.js"></script>
<script src="http://mima.c.fun.ac.jp/1012151/js/backbone-min.js"></script>
<script src="http://mima.c.fun.ac.jp/1012151/js/jquery.colorbox-min.js"></script>
<script src="http://mima.c.fun.ac.jp/1012151/js/bootstrap.min.js"></script>
<script src="http://mima.c.fun.ac.jp/1012151/js/parent.js"></script>
<script src='http://mima.c.fun.ac.jp/1012151/js/jquery.box-lid.min.js'></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7Pxqp7Asgi6D4eOtkCxnir5xPiIwY3EE"></script>
<script>
	// ユーザーの端末がGeoLocation APIに対応しているかの判定
	// 対応している場合
	if (navigator.geolocation) {
		// 現在地を取得
		navigator.geolocation.getCurrentPosition(

			// [第1引数] 取得に成功した場合の関数
			function(position) {
				// 取得したデータの整理
				var data = position.coords;

				// データの整理
				 lat = data.latitude;
				 lng = data.longitude;
				var alt = data.altitude;
				var accLatlng = data.accuracy;
				var accAlt = data.altitudeAccuracy;
				var heading = data.heading; //0=北,90=東,180=南,270=西
				var speed = data.speed;
				// アラート表示
				//alert("あなたの現在位置は、\n[" + lat + "," + lng + "]\nです。");


       // 位置情報を送信する
       var xmlHttp = new XMLHttpRequest(); /*1.オブジェクトの生成*/
      gps = lat + "," + lng
       xmlHttp.open('GET','send_gps.rb?gps='+gps,true);
       xmlHttp.onreadystatechange=function(){ /*小僧が持ってくる動作*/
       if(xmlHttp.readyState==4){
      				//alert(gps);
      	}
      }
      xmlHttp.send(null);

				// HTMLへの書き出し
				document.getElementById('result').innerHTML = '<dl><dt>緯度</dt><dd>' + lat + '</dd><dt>経度</dt><dd>' + lng + '</dd><dt>高度</dt><dd>' + alt + '</dd><dt>緯度、経度の精度</dt><dd>' + accLatlng + '</dd><dt>高度の精度</dt><dd>' + accAlt +
					'</dd><dt>方角</dt><dd>' + heading + '</dd><dt>速度</dt><dd>' + speed + '</dd></dl>';

				// 位置情報
				var latlng = new google.maps.LatLng(lat, lng);
				// Google Mapsに書き出し
				var map = new google.maps.Map(document.getElementById('map-canvas'), {
					zoom: 15, // ズーム値
					center: latlng, // 中心座標 [latlng]
				});
				// マーカーの新規出力
				new google.maps.Marker({
					map: map,
					position: latlng,
				});
			},
			// [第2引数] 取得に失敗した場合の関数
			function(error) {
				// エラーコード(error.code)の番号
				// 0:UNKNOWN_ERROR				原因不明のエラー
				// 1:PERMISSION_DENIED			利用者が位置情報の取得を許可しなかった
				// 2:POSITION_UNAVAILABLE		電波状況などで位置情報が取得できなかった
				// 3:TIMEOUT					位置情報の取得に時間がかかり過ぎた…
				// エラー番号に対応したメッセージ
				var errorInfo = [
					"原因不明のエラーが発生しました…。",
					"位置情報の取得が許可されませんでした…。",
					"電波状況などで位置情報が取得できませんでした…。",
					"位置情報の取得に時間がかかり過ぎてタイムアウトしました…。"
				];

				// エラー番号
				var errorNo = error.code;

				// エラーメッセージ
				var errorMessage = "[エラー番号: " + errorNo + "]\n" + errorInfo[errorNo];

				// アラート表示
				alert(errorMessage);

				// HTMLに書き出し
				//document.getElementById("result").innerHTML = errorMessage;
			},

			// [第3引数] オプション
			{
				"enableHighAccuracy": false,
				"timeout": 10000,
				"maximumAge": 2000,
			}

		);
	}

	// 対応していない場合
	else {
		// エラーメッセージ
		var errorMessage = "お使いの端末は、GeoLacation APIに対応していません。";
		// アラート表示
		alert(errorMessage);
		// HTMLに書き出し
		document.getElementById('result').innerHTML = errorMessage;
	}



</script>
<script>
	var today = new Date();
	var year = today.getFullYear().toString();
	var month = today.getMonth() + 1;
	month = month.toString();
	var day = today.getDate().toString();
	if (month.length == 1) {
		month = "0" + month;
	}
	if (day.length == 1) {
		day = "0" + day;
	}
	$(document).ready(function() {


				$('#calendar').fullCalendar({
							header: {
								left: 'prev,next today',
								center: 'title',
								right: 'month,agendaWeek,agendaDay'
							},
							defaultDate: year + "-" + month + "-" + day,
							defaultView: 'agendaWeek',
							selectable: true,
							selectHelper: true,
							editable: true,
							eventLimit: true, // allow "more" link when too many events
                 contentHeight: 550,
							events: [
